/* IMPORT */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _ = require("lodash");
var mongoose_1 = require("mongoose");
/* MONGOOSE TO GRAPHQL */
//TODO: Add support for { type: Something: ref: 'Model' }
var M2G = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return M2G.schema.apply(M2G, args);
};
/* SCHEMA */
M2G.schema = function (name, schema) {
    if (schema instanceof mongoose_1.Schema)
        return M2G.schema(name, schema.obj);
    return "type " + name + " " + M2G.plainObject(schema);
};
/* MODEL */
M2G.model = function (model) {
    return M2G.schema(model['modelName'], model['schema']);
};
/* PLAIN OBJECT */
M2G.plainObject = function (obj) {
    var types = [];
    for (var key in obj) {
        if (!obj.hasOwnProperty(key))
            continue;
        types.push(key + ": " + M2G.type(obj[key]));
    }
    return "{\n    " + types.join('\n') + "\n  }";
};
/* TYPE */
M2G.type = function (type) {
    switch (type) {
        case String: return 'String';
        case Number: return 'Float'; //FIXME: What if we want an Int?
        case Date: return 'Date';
        // case Buffer: return; //TODO: Implement
        case Boolean: return 'Boolean';
        case Array: return '[]';
    }
    if (_.isString(type)) {
        return type;
    }
    else if (_.isArray(type)) {
        var converted = type.length ? M2G.type(type[0]) : '';
        return "[" + converted + "]";
    }
    else if (_.isPlainObject(type)) {
        if (type.hasOwnProperty('type')) {
            var required = !!type.required ? '!' : '', converted = M2G.type(type.type);
            return "" + converted + required;
        }
        else {
            return M2G.plainObject(type);
        }
    }
    else if (_.isFunction(type)) {
        if ('modelName' in type) {
            return type.modelName;
        }
        else if ('schemaName' in type) {
            switch (type.schemaName) {
                case 'ObjectId': return 'ID';
            }
        }
    }
    else if (_.isObject(type) && 'childSchemas' in type && 'obj' in type) {
        return M2G.plainObject(type['obj']);
    }
    throw new Error('[mongoose-to-graphql] Type conversion not supported');
};
/* EXPORT */
var schema = M2G.schema, model = M2G.model, plainObject = M2G.plainObject, type = M2G.type;
exports.schema = schema;
exports.model = model;
exports.plainObject = plainObject;
exports.type = type;
exports.default = M2G;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsWUFBWTs7O0FBRVosMEJBQTRCO0FBQzVCLHFDQUFnQztBQUdoQyx5QkFBeUI7QUFFekIseURBQXlEO0FBRXpELElBQU0sR0FBRyxHQUFHO0lBQVcsY0FBTztTQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87UUFBUCx5QkFBTzs7SUFFNUIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLE9BQVYsR0FBRyxFQUFhLElBQUksRUFBRztBQUVoQyxDQUFzQixDQUFDO0FBRXZCLFlBQVk7QUFFWixHQUFHLENBQUMsTUFBTSxHQUFHLFVBQVcsSUFBWSxFQUFFLE1BQW1CO0lBRXZELEVBQUUsQ0FBQyxDQUFFLE1BQU0sWUFBWSxpQkFBTyxDQUFDO1FBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUcsSUFBSSxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUUsQ0FBQztJQUV2RSxNQUFNLENBQUMsVUFBUSxJQUFJLFNBQUksR0FBRyxDQUFDLFdBQVcsQ0FBRyxNQUFNLENBQUksQ0FBQztBQUV0RCxDQUFDLENBQUM7QUFFRixXQUFXO0FBRVgsR0FBRyxDQUFDLEtBQUssR0FBRyxVQUFZLEtBQWU7SUFFckMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUcsS0FBSyxDQUFDLFdBQVcsQ0FBQyxFQUFFLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBRSxDQUFDO0FBRTVELENBQUMsQ0FBQztBQUVGLGtCQUFrQjtBQUVsQixHQUFHLENBQUMsV0FBVyxHQUFHLFVBQVcsR0FBTztJQUVsQyxJQUFNLEtBQUssR0FBYSxFQUFFLENBQUM7SUFFM0IsR0FBRyxDQUFDLENBQUUsSUFBSSxHQUFHLElBQUksR0FBSSxDQUFDLENBQUMsQ0FBQztRQUV0QixFQUFFLENBQUMsQ0FBRSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUcsR0FBRyxDQUFHLENBQUM7WUFBQyxRQUFRLENBQUM7UUFFNUMsS0FBSyxDQUFDLElBQUksQ0FBTSxHQUFHLFVBQUssR0FBRyxDQUFDLElBQUksQ0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUksQ0FBRSxDQUFDO0lBRXBELENBQUM7SUFFRCxNQUFNLENBQUMsWUFDSCxLQUFLLENBQUMsSUFBSSxDQUFHLElBQUksQ0FBRSxVQUNyQixDQUFDO0FBRUwsQ0FBQyxDQUFDO0FBRUYsVUFBVTtBQUVWLEdBQUcsQ0FBQyxJQUFJLEdBQUcsVUFBVyxJQUFJO0lBRXhCLE1BQU0sQ0FBQyxDQUFFLElBQUssQ0FBQyxDQUFDLENBQUM7UUFFZixLQUFLLE1BQU0sRUFBRSxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQzdCLEtBQUssTUFBTSxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxnQ0FBZ0M7UUFDN0QsS0FBSyxJQUFJLEVBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUN6Qix5Q0FBeUM7UUFDekMsS0FBSyxPQUFPLEVBQUUsTUFBTSxDQUFDLFNBQVMsQ0FBQztRQUMvQixLQUFLLEtBQUssRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDO0lBRTFCLENBQUM7SUFFRCxFQUFFLENBQUMsQ0FBRSxDQUFDLENBQUMsUUFBUSxDQUFHLElBQUksQ0FBRyxDQUFDLENBQUMsQ0FBQztRQUUxQixNQUFNLENBQUMsSUFBSSxDQUFDO0lBRWQsQ0FBQztJQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBRSxDQUFDLENBQUMsT0FBTyxDQUFHLElBQUksQ0FBRyxDQUFDLENBQUMsQ0FBQztRQUVoQyxJQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFFLEdBQUcsRUFBRSxDQUFDO1FBRTFELE1BQU0sQ0FBQyxNQUFJLFNBQVMsTUFBRyxDQUFDO0lBRTFCLENBQUM7SUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUUsQ0FBQyxDQUFDLGFBQWEsQ0FBRyxJQUFJLENBQUcsQ0FBQyxDQUFDLENBQUM7UUFFdEMsRUFBRSxDQUFDLENBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBRyxNQUFNLENBQUcsQ0FBQyxDQUFDLENBQUM7WUFFckMsSUFBTSxRQUFRLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxHQUFHLEVBQUUsRUFDckMsU0FBUyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUcsSUFBSSxDQUFDLElBQUksQ0FBRSxDQUFDO1lBRXpDLE1BQU0sQ0FBQyxLQUFHLFNBQVMsR0FBRyxRQUFVLENBQUM7UUFFbkMsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBRU4sTUFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUcsSUFBSSxDQUFFLENBQUM7UUFFbEMsQ0FBQztJQUVILENBQUM7SUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBRyxJQUFJLENBQUcsQ0FBQyxDQUFDLENBQUM7UUFFbkMsRUFBRSxDQUFDLENBQUUsV0FBVyxJQUFJLElBQUssQ0FBQyxDQUFDLENBQUM7WUFFMUIsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7UUFFeEIsQ0FBQztRQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBRSxZQUFZLElBQUksSUFBSyxDQUFDLENBQUMsQ0FBQztZQUVsQyxNQUFNLENBQUMsQ0FBRSxJQUFJLENBQUMsVUFBVyxDQUFDLENBQUMsQ0FBQztnQkFFMUIsS0FBSyxVQUFVLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQztZQUcvQixDQUFDO1FBRUgsQ0FBQztJQUVILENBQUM7SUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBRyxJQUFJLENBQUUsSUFBSSxjQUFjLElBQUksSUFBSSxJQUFJLEtBQUssSUFBSSxJQUFLLENBQUMsQ0FBQyxDQUFDO1FBRTVFLE1BQU0sQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBRSxDQUFDO0lBRXpDLENBQUM7SUFFRCxNQUFNLElBQUksS0FBSyxDQUFHLHFEQUFxRCxDQUFFLENBQUM7QUFFNUUsQ0FBQyxDQUFDO0FBRUYsWUFBWTtBQUVMLElBQUEsbUJBQU0sRUFBRSxpQkFBSyxFQUFFLDZCQUFXLEVBQUUsZUFBSSxDQUFRO0FBR3ZDLHdCQUFNO0FBQUUsc0JBQUs7QUFBRSxrQ0FBVztBQUFFLG9CQUFJO0FBRHhDLGtCQUFlLEdBQUcsQ0FBQyJ9