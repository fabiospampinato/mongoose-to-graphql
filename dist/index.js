/* IMPORT */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _ = require("lodash");
/* MONGOOSE TO GRAPHQL */
//TODO: Add support for { type: Something: ref: 'Model' }
var M2G = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return M2G.schema.apply(M2G, args);
};
/* SCHEMA */
M2G.schema = function (name, schema) {
    if ('childSchemas' in schema && 'obj' in schema)
        return M2G.schema(name, schema.obj); // Is a Mongoose's Schema
    var types = [];
    schema = _.cloneDeep(schema);
    _.transform(schema, function (acc, val, key) {
        var sub = _.isArray(val) ? val[0] : val;
        if (!_.isPlainObject(sub) || sub.hasOwnProperty('type'))
            return;
        var subName = name + "_" + _.uniqueId();
        schema[key] = _.isArray(val) ? [subName] : subName;
        types.push(M2G.schema(subName, sub));
    });
    types.push("type " + name + " " + M2G.plainObject(schema));
    return types.join('\n');
};
/* MODEL */
M2G.model = function (model) {
    return M2G.schema(model['modelName'], model['schema']);
};
/* PLAIN OBJECT */
M2G.plainObject = function (obj) {
    var types = [];
    for (var key in obj) {
        if (!obj.hasOwnProperty(key))
            continue;
        types.push(key + ": " + M2G.type(obj[key]));
    }
    return "{\n    " + types.join('\n') + "\n  }";
};
/* TYPE */
M2G.type = function (type) {
    switch (type) {
        case String: return 'String';
        case Number: return 'Float'; //FIXME: What if we want an Int?
        case Date: return 'Date';
        // case Buffer: return; //TODO: Implement
        case Boolean: return 'Boolean';
        case Array: return '[]';
    }
    if (_.isString(type)) {
        return type;
    }
    else if (_.isArray(type)) {
        var converted = type.length ? M2G.type(type[0]) : '';
        return "[" + converted + "]";
    }
    else if (_.isPlainObject(type)) {
        if (type.hasOwnProperty('type')) {
            var required = !!type.required ? '!' : '', converted = M2G.type(type.type);
            return "" + converted + required;
        }
        else {
            return M2G.plainObject(type);
        }
    }
    else if (_.isFunction(type)) {
        if ('modelName' in type) {
            return type.modelName;
        }
        else if ('schemaName' in type) {
            switch (type.schemaName) {
                case 'ObjectId': return 'ID';
            }
        }
    }
    else if (_.isObject(type) && 'childSchemas' in type && 'obj' in type) {
        return M2G.plainObject(type['obj']);
    }
    throw new Error('[mongoose-to-graphql] Type conversion not supported');
};
/* EXPORT */
var schema = M2G.schema, model = M2G.model, plainObject = M2G.plainObject, type = M2G.type;
exports.schema = schema;
exports.model = model;
exports.plainObject = plainObject;
exports.type = type;
exports.default = M2G;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsWUFBWTs7O0FBRVosMEJBQTRCO0FBSTVCLHlCQUF5QjtBQUV6Qix5REFBeUQ7QUFFekQsSUFBTSxHQUFHLEdBQUc7SUFBVyxjQUFPO1NBQVAsVUFBTyxFQUFQLHFCQUFPLEVBQVAsSUFBTztRQUFQLHlCQUFPOztJQUU1QixNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sT0FBVixHQUFHLEVBQWEsSUFBSSxFQUFHO0FBRWhDLENBQXNCLENBQUM7QUFFdkIsWUFBWTtBQUVaLEdBQUcsQ0FBQyxNQUFNLEdBQUcsVUFBVyxJQUFZLEVBQUUsTUFBbUI7SUFFdkQsRUFBRSxDQUFDLENBQUUsY0FBYyxJQUFJLE1BQU0sSUFBSSxLQUFLLElBQUksTUFBTyxDQUFDO1FBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUcsSUFBSSxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUUsQ0FBQyxDQUFDLHlCQUF5QjtJQUVwSCxJQUFNLEtBQUssR0FBYSxFQUFFLENBQUM7SUFFM0IsTUFBTSxHQUFHLENBQUMsQ0FBQyxTQUFTLENBQUcsTUFBTSxDQUFFLENBQUM7SUFFaEMsQ0FBQyxDQUFDLFNBQVMsQ0FBRyxNQUFNLEVBQUUsVUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQVc7UUFFM0MsSUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBRyxHQUFHLENBQUUsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO1FBRTdDLEVBQUUsQ0FBQyxDQUFFLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBRyxHQUFHLENBQUUsSUFBSSxHQUFHLENBQUMsY0FBYyxDQUFHLE1BQU0sQ0FBRyxDQUFDO1lBQUMsTUFBTSxDQUFDO1FBRXhFLElBQU0sT0FBTyxHQUFNLElBQUksU0FBSSxDQUFDLENBQUMsUUFBUSxFQUFLLENB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